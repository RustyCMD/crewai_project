2025-09-21 19:57:01,309 - __main__ - INFO - Starting idle game development workflow...
2025-09-21 19:57:02,139 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 19:57:02,396 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 19:57:02,401 - root - ERROR - Error during short_term search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 19:57:02,427 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 19:57:02,626 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 19:57:02,629 - root - ERROR - Error during entities search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 19:57:02,642 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:09,781 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:09,783 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:09,800 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:13,826 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:13,828 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:13,842 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:20,173 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:20,174 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:20,191 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:20,642 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:20,643 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:20,654 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 19:57:20,986 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 19:57:20,989 - root - ERROR - Error during short_term search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 19:57:20,991 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 19:57:21,161 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 19:57:21,163 - root - ERROR - Error during entities search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 19:57:21,172 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:22,419 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:22,420 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:22,465 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:29,133 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:29,134 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:29,152 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:32,527 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:32,528 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:32,545 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:38,378 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:38,379 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:38,397 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:41,550 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:41,551 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:41,568 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:50,508 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:50,508 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:50,517 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:57:59,175 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:57:59,177 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:57:59,196 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:58:18,595 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:58:18,596 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:58:18,602 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:58:39,555 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:58:39,558 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:58:39,584 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 19:58:39,586 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 19:58:39,790 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 19:58:39,792 - root - ERROR - Error during short_term save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 19:58:40,251 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:58:41,598 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:58:41,599 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:58:41,645 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 19:58:41,785 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 19:58:41,788 - root - ERROR - Error during short_term search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 19:58:41,790 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 19:58:41,926 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 19:58:41,929 - root - ERROR - Error during entities search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 19:58:41,940 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:58:50,041 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:58:50,042 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:58:50,064 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:58:55,124 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:58:55,125 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:58:55,149 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:59:07,108 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:59:07,109 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:59:07,137 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 19:59:40,741 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 19:59:40,747 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 19:59:40,756 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:00:19,085 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:00:19,086 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:00:19,127 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:00:19,129 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:00:19,330 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:00:19,332 - root - ERROR - Error during short_term save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:00:19,337 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:00:20,704 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:00:20,705 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:00:20,750 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:00:20,983 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:00:20,985 - root - ERROR - Error during short_term search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:00:20,987 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:00:21,164 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:00:21,166 - root - ERROR - Error during entities search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:00:21,174 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:00:22,498 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:00:22,499 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:00:22,526 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:00:23,986 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:00:23,987 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:00:24,013 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:01:04,023 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:01:04,031 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:01:04,081 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:01:04,083 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:01:04,331 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:01:04,334 - root - ERROR - Error during short_term save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:01:04,339 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:01:06,112 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:01:06,113 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:01:06,156 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:01:06,319 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:01:06,321 - root - ERROR - Error during short_term search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:01:06,324 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:01:06,482 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:01:06,485 - root - ERROR - Error during entities search: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 301, in _validate_and_prepare_query_request
    request_embeddings = self._embed_record_set(record_set=query_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 118, in search
    return client.search(
           ~~~~~~~~~~~~~^
        collection_name=collection_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        score_threshold=score_threshold,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 418, in search
    results: QueryResult = collection.query(
                           ~~~~~~~~~~~~~~~~^
        query_texts=[params.query],
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ...<3 lines>...
        include=params.include,
        ^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 210, in query
    query_request = self._validate_and_prepare_query_request(
        query_embeddings=query_embeddings,
    ...<6 lines>...
        include=include,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:01:06,494 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:01:09,797 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:01:09,798 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:01:09,830 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:01:11,200 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:01:11,208 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:01:11,245 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:01:12,853 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:01:12,854 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:01:12,889 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:01:28,215 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:01:28,216 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:01:28,229 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:02:10,199 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:02:10,210 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:02:10,236 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:10,237 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:10,615 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:10,618 - root - ERROR - Error during short_term save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:10,622 - LiteLLM - INFO - 
LiteLLM completion() model= gemini-2.0-flash-lite; provider = gemini
2025-09-21 20:02:13,904 - httpx - INFO - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash-lite:generateContent?key=AIzaSyC4Nd73O1eCHBhkoSzCFvn1cyxTGldeQbs "HTTP/1.1 200 OK"
2025-09-21 20:02:13,905 - LiteLLM - INFO - Wrapper: Completed Call, calling success_handler
2025-09-21 20:02:13,920 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:13,921 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,042 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:14,045 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:14,046 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,048 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,294 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:14,297 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:14,299 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,300 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,494 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:14,497 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:14,499 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,500 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,657 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:14,659 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:14,661 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,662 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,787 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:14,790 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:14,796 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,798 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,933 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:14,936 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:14,937 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:14,939 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:15,085 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:15,088 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:15,089 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:15,090 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:15,219 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:15,221 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

2025-09-21 20:02:15,223 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:15,224 - chromadb.telemetry.product.posthog - ERROR - Failed to send telemetry event ClientCreateCollectionEvent: capture() takes 1 positional argument but 3 were given
2025-09-21 20:02:15,359 - httpx - INFO - HTTP Request: POST https://api.openai.com/v1/embeddings "HTTP/1.1 401 Unauthorized"
2025-09-21 20:02:15,361 - root - ERROR - Error during entities save: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'
Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 90, in wrapper
    return func(self, *args, **kwargs)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 406, in _validate_and_prepare_upsert_request
    upsert_embeddings = self._embed_record_set(record_set=upsert_records)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 526, in _embed_record_set
    return self._embed(input=record_set[field])  # type: ignore[literal-required]
           ~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 539, in _embed
    return self._embedding_function(input=input)
           ~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\types.py", line 466, in __call__
    result = call(self, input)
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\utils\embedding_functions\openai_embedding_function.py", line 113, in __call__
    embeddings = self._client.create(
                 ~~~~~~~~~~~~~~~~~~~^
        input=input,
        ^^^^^^^^^^^^
        model=self._deployment_id or self._model_name,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
        dimensions=self._dimensions,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    ).data
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\resources\embeddings.py", line 132, in create
    return self._post(
           ~~~~~~~~~~^
        "/embeddings",
        ^^^^^^^^^^^^^^
    ...<8 lines>...
        cast_to=CreateEmbeddingResponse,
        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1259, in post
    return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))
                           ~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\openai\_base_client.py", line 1047, in request
    raise self._make_status_error_from_response(err.response) from None
openai.AuthenticationError: Error code: 401 - {'error': {'message': 'Incorrect API key provided: sk-dummy**************************************tead. You can find your API key at https://platform.openai.com/account/api-keys.', 'type': 'invalid_request_error', 'param': None, 'code': 'invalid_api_key'}}

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\memory\storage\rag_storage.py", line 98, in save
    client.add_documents(collection_name=collection_name, documents=[document])
    ~~~~~~~~~~~~~~~~~~~~^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\crewai\rag\chromadb\client.py", line 320, in add_documents
    collection.upsert(
    ~~~~~~~~~~~~~~~~~^
        ids=prepared.ids,
        ^^^^^^^^^^^^^^^^^
        documents=prepared.texts,
        ^^^^^^^^^^^^^^^^^^^^^^^^^
        metadatas=metadatas,
        ^^^^^^^^^^^^^^^^^^^^
    )
    ^
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\Collection.py", line 334, in upsert
    upsert_request = self._validate_and_prepare_upsert_request(
        ids=ids,
    ...<4 lines>...
        uris=uris,
    )
  File "C:\Users\dev\AppData\Roaming\Python\Python313\site-packages\chromadb\api\models\CollectionCommon.py", line 93, in wrapper
    raise type(e)(msg).with_traceback(e.__traceback__)
          ~~~~~~~^^^^^
TypeError: APIStatusError.__init__() missing 2 required keyword-only arguments: 'response' and 'body'

